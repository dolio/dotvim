# Actionscript 3 snippets file by Alex Schearer <aschearer@gmail.com>

# trace
snippet tr
	trace(${1:/* argument* /});
# package
snippet pa
	package ${1:/* package */}
	{
		${2:/* code */}
	}
# import
snippet im
	import ${1:/* package */};
# Start Docblock
snippet /*
	/**
	 * ${1:Comments}
	 **/
# while
snippet wh
	while (${1:/* condition */}) {
		${2:// code...}
	}
# do ... while
snippet do
	do {
		${2:// code... }
	} while (${1:/* condition */});
snippet if
	if (${1:/* condition */}) {
		${2:// code...}
	}
snippet ife
	if (${1:/* condition */}) {
		${2:// code...}
	} else {
		${3:// code...}
	}
	${4}
snippet else
	else {
		${1:// code...}
	}
snippet elseif
	else if (${1:/* condition */}) {
		${2:// code...}
	}
# switch
snippet sw
	switch (${1:/* condition */}) {
		case ${2:/* value */}:
			${3:// code...}
			break;
		${5}
		default:
			${4:// code...}
			break;
	}
# case
snippet case
	case ${1:/* value */}:
		${2:// code...}
		break;${3}
snippet for
	for (var ${2:i}:uint = 0; $2 < ${1:count}; $2${3:++}) {
		${4: // code...}
	}
snippet fors
	for(var ${1:p}:String in ${2:obj})
	{
		${3:}
	}
snippet foreach
	for each (var ${1:value}:${2:Type} in ${3:list}) {
		${4:// code...}
	}
snippet fun
	${1:public }function ${2:FunctionName}(${3}):${4:void}
	{
		${5:// code...}
	}
snippet fun private
	private function ${1:name}():${2:void}{
		${3:}
	}
snippet fun protected
	protected function ${1:name}():${2:void}{
		${3:}
	}
snippet fun public
	public function ${1:name}():${2:void}{
		${3:}
	}
snippet fun override protected
	override protected function ${1:name}():${2:void}{
		super.$1();
		${3:}
	}
snippet fun override public
	override public function ${1:name}():${2:void}{
		super.$1();
		${3:}
	}
snippet get
	${1:public }function get ${2:FunctionName}():${3:void}
	{
		${4:// code...}
	}
snippet set 
	${1:public }function set ${2:FunctionName}(${3:value}:${4:Type:}):${5:void}
	{
		${6:// code...}
	}
snippet class
	${1:public }class ${2:ClassName} ${3:extends} ${4:BaseClass}
	{
		public function $2(${5}):void{
			
		}

		${6://code...}
	}
snippet throw
	throw new ${1:Error}("${2:Error Message}");
snippet catch
	catch (e:${1:Error}) {
		${2:}
	}
snippet try try
	try {
		${1:}
	}
snippet try try catch
	try {
		${1:}
	} catch (e:Error) {
		${2:}
	}
snippet try try catch finally
	try {
		${1:}
	} catch (e:Error) {
		${2:}
	} finally {
		${3:}
	}
snippet var private
	private var ${1:name}:${2:Type};
snippet var protected
	protected var ${1:name}:${2:Type};
snippet var public
	public var ${1:name}:${2:Type};
snippet const
	${1:public }static const ${2:CONSTANT}:${3:Type} = ${4:value};
# gotoAndPlay
snippet gop
	gotoAndPlay(${1:frame});
# gotoAndStop
snippet gos
	gotoAndStop(${1:frame});
snippet bindable
	[Bindable${1:(event="${2:eventName}")}]
snippet swf
	[SWF(width='${1:550}', height='${2:400}', backgroundColor='#${3:FFFFFF}', frameRate='${4:60}')]
